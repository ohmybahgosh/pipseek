name: Build PIPSeek Binaries

on:
  push:
    tags:
      - 'v*'  # Only run on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output_name: pipseek-linux
          - os: windows-latest
            output_name: pipseek-windows.exe
          - os: macos-latest
            output_name: pipseek-macos

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka ordered-set
        pip install textual rich bs4 requests
        
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y patchelf
        
    - name: Build with Nuitka (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        python -m nuitka \
          --standalone \
          --onefile \
          --assume-yes-for-downloads \
          --follow-imports \
          --include-package=textual \
          --include-package=rich \
          --include-package=bs4 \
          --include-package=requests \
          --include-module=signal \
          --include-module=concurrent.futures \
          --include-module=urllib.parse \
          --include-module=shutil \
          --include-module=datetime \
          --include-module=time \
          --include-module=os \
          --include-module=posixpath \
          --include-module=_curses \
          --include-module=win32api \
          --company-name="OhMyBahGosh" \
          --product-name="PIPSeek" \
          --copyright="Copyright © 2024 - GNU General Public License v3.0" \
          --file-version="1.0.0" \
          --output-dir=dist \
          --output-filename=pipseek-windows.exe \
          pipseek.py

    - name: Build with Nuitka (Unix)
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        python -m nuitka \
          --standalone \
          --onefile \
          --assume-yes-for-downloads \
          --follow-imports \
          --include-package=textual \
          --include-package=rich \
          --include-package=bs4 \
          --include-package=requests \
          --include-module=signal \
          --include-module=concurrent.futures \
          --include-module=urllib.parse \
          --include-module=shutil \
          --include-module=datetime \
          --include-module=time \
          --include-module=os \
          --include-module=posixpath \
          --include-module=curses \
          --static-libpython=yes \
          --company-name="OhMyBahGosh" \
          --product-name="PIPSeek" \
          --copyright="Copyright © 2024 - GNU General Public License v3.0" \
          --file-version="1.0.0" \
          --output-dir=dist \
          --output-filename=${{ matrix.output_name }} \
          pipseek.py

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output_name }}
        path: dist/${{ matrix.output_name }}
        if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            pipseek-linux/pipseek-linux
            pipseek-windows.exe/pipseek-windows.exe
            pipseek-macos/pipseek-macos
          draft: false
          prerelease: false
          generate_release_notes: true
